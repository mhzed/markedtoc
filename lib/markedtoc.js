// Generated by CoffeeScript 1.7.1
(function() {
  var marked, pluginCompiler, replaceToc, tocCompiler;

  marked = require('marked');

  pluginCompiler = require('./pluginCompiler');

  tocCompiler = require('./tocCompiler');

  module.exports = marked;

  (function() {
    var newLexer, oldLexer;
    oldLexer = marked.lexer;
    newLexer = function(data, options) {
      var toks;
      toks = oldLexer(data, options);
      return replaceToc(toks);
    };
    marked.Lexer.lex = newLexer;
    return marked.lexer = newLexer;
  })();

  (function() {
    var renderer;
    renderer = new marked.Renderer();
    renderer.list = function(body, ordered) {
      var type;
      if (ordered === 'toc') {
        return "<ul id='toc'>" + body + "</ul>";
      } else {
        type = ordered ? 'ol' : 'ul';
        return '<' + type + '>\n' + body + '</' + type + '>\n';
      }
    };
    return marked.setOptions({
      renderer: renderer
    });
  })();


  /*
  tokens: returned by marked.Lexer.lex()
  returns:  tokens with [TOC] paragraph replaced and filled in with toc lists
   */

  replaceToc = function(tokens) {
    return pluginCompiler(tokens, {
      'TOC': tocCompiler
    });
  };

}).call(this);

//# sourceMappingURL=markedtoc.map
